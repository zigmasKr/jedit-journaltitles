<?xml version="1.0"?>
<project name="JournalTitlesEditor" default="package" basedir=".">

	 <description>
		Builds the JournalTitles (JournalTitlesEditor) plugin using the required build-support plugin-build.xml
	 </description>
	 
	 <!--
	conditional on the operating system
	https://alvinalexander.com/blog/post/java/how-conditional-operation-ant-script-operating-system
	-->
	<!-- <echo message="${os.name}" /> -->
	<condition property="os.nickname" value="win">
		<os family="windows" />
	</condition>
	<condition property="os.nickname" value="lin">
		<os family="unix" />
	</condition>
	<condition property="os.nickname" value="mac">
		<os family="mac" />
	</condition>
	<!-- <echo message="os nickname is ${os.nickname}"/> -->

	<property file="build-${os.nickname}.properties" />
	<!--
	<property file="build.properties" />
	<property file="../build.properties" />
	-->

	<property name="compiler.source"		value="1.8" />
	<property name="compiler.target" 	value="1.8" />
	<property name="src.dir" value="src" />

	<property name="build.support" value="build-support" />
	<import file="${build.support}/plugin-build.xml" />

	<property name="jedit.plugins.dir" value="${jedit.install.dir}/jars"/>
	<property name="jedit.user.plugins.dir" value="${jedit.user.home}/jars"/>
	
	<!-- the directory for the compiled classes. Files in this directory
	will be included in the finished jar file. -->
	<property name="classes.dir" location="classes" />
	<!-- class name for 'main' to run as application -->
	<property name="main.class" value="journaltitles.JournalTitles"/>

	<!-- Documentation process
	none: if you supply your own html file as this template does.
	xsltproc: if you plan on using docbook
	-->
	<property name="docs-proc.target" value="xsltproc" />
	<property name="plugin.version" value="0.9.6" />


	 <!-- Extra files that get put into the jar file, above and beyond
			the default set (which always includes actions,dockables,services.xml,
			*.props, etc -->

			<!--
	 <selector id="packageFiles">
	  <or>
		<filename name="docs/*.html" />
	  </or>
	 </selector>
	 -->
	 
	 <selector id="classesForPlugin">
		<and>
			<not>
				<filename name="journaltitles/JournalTitles.class" />
			</not>
			<not>
				<filename name="journaltitles/JournalTitles$1.class" />
			</not>
		</and>
	</selector>

	<path id="project.class.path">
	</path>
	
	<target name="build.prepare">
		<!-- Copy over required dependencies to install.dir
		<copy todir="${install.dir}">
			<fileset dir="lib">
				<filename name="*.jar"/>
			</fileset>
		</copy>
		-->
	</target>

	<!-- =====================================
	Builds the plugin JAR file (inluding docs)
	====================================== -->

	<target name="build"
			depends="build.prepare,compile"
			description="Builds the plugin JAR file (inluding docs)">

		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.docs}" />
		<delete dir="${build.extras}" failonerror="false" />
		<mkdir dir="${build.extras}" />
		<mkdir dir="${install.dir}" />

		<copy todir="${build.extras}" includeEmptyDirs="false">
			<fileset dir="${basedir}">
				<selector refid="extraFiles" />
			</fileset>
		</copy>

		<jar jarfile="${install.dir}/${jar.file}">
			<fileset dir="${build.classes}">
				<selector refid="classesForPlugin" />
			</fileset>
			<fileset dir="${build.docs}" />
			<fileset dir="${build.extras}" />
		</jar>

		<antcall target="build.post" />

	</target>
	
	<!-- ========================================
	TARGET: run
	Runs the application, for testing
	========================================= -->
	<target name="run"
			depends="build.prepare,compile"
			description="Runs the application">
		<java classname="${main.class}" fork="true">
			<classpath>
				<pathelement path="${classpath}" />
				<pathelement location="${build.classes}" />
			</classpath>
		</java>
	</target>

</project>
